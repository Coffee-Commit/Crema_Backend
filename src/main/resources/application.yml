spring:
  application:
    name: Crema
  config:
    import:
      - optional:file:.env[.properties]
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true  # 개발환경이니까 SQL 로그 유지
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 15MB
  datasource:
    hikari:
      minimum-idle: 5
      maximum-pool-size: 10
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
    url: jdbc:mysql://${DB_HOST}:${DB_PORT}/${DB_NAME}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
  data:
    redis:
      host: localhost
      port: 6379
      timeout: 2000ms
      connect-timeout: 2000ms
      lettuce:
        pool:
          max-active: 10
          max-idle: 10
          min-idle: 2
  profiles:
    include: oauth
    active: ${SPRING_PROFILES_ACTIVE:dev}
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            redirect-uri: "{baseUrl}/login/oauth2/code/google"  # 자동으로 현재 서버 주소로 치환
            scope:
              - profile
          kakao:
            client-id: ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_CLIENT_SECRET}
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/kakao"   # 자동으로 현재 서버 주소로 치환
            scope:
              - profile_nickname
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
  # S3 자동 설정 비활성화
  autoconfigure:
    exclude:
      - io.awspring.cloud.autoconfigure.s3.S3AutoConfiguration
      - io.awspring.cloud.autoconfigure.core.CredentialsAutoConfiguration
      - io.awspring.cloud.autoconfigure.core.RegionAutoConfiguration

server:
  port: 8080

jwt:
  secret: ${JWT_KEY} # 랜덤 비밀키(Base64 인코딩됨)
  access-token-expiration: 1800000  # 30분 (밀리초)
  refresh-token-expiration: 1209600000  # 14일 (밀리초)

app:
  oauth2:
    authorized-redirect-uri: ${FRONTEND_URL}/oauth2/redirect  # 환경변수로 프론트엔드 주소 설정
  cookie:
    domain: ${COOKIE_DOMAIN:}  # 로컬에서는 빈값, dev에서는 .coffeechat.kro.kr
    same-site: ${COOKIE_SAMESITE:Lax}  # OAuth2에서는 Lax가 적절, CSRF 공격 방어 가능

cloud:
  aws:
    credentials:
      accessKey: ${AWS_ACCESS_KEY:dummy-access-key}
      secretKey: ${AWS_SECRET_KEY:dummy-secret-key}
    s3:
      bucket: ${AWS_S3_BUCKET:dummy-bucket}
    region:
      static: ${AWS_REGION:ap-northeast-2}