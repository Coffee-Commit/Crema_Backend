plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.4'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'coffeandcommit'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    //swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.8'

    // mapstruct
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

    // Lombok과 MapStruct 연동
    annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

    //jwt
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    //lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    //others
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

    //mysql
    runtimeOnly 'com.mysql:mysql-connector-j'

    //h2
    //runtimeOnly 'com.h2database:h2'
    testRuntimeOnly 'com.h2database:h2'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    //aws
    implementation 'io.awspring.cloud:spring-cloud-aws-starter-s3:3.0.4'
    implementation 'software.amazon.awssdk:s3:2.32.27'

    // OAuth2
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    //retryable annotation
    implementation 'org.springframework.retry:spring-retry'

    // QueryDSL (OpenFeign 최신)
    implementation "io.github.openfeign.querydsl:querydsl-jpa:7.0"
    annotationProcessor "io.github.openfeign.querydsl:querydsl-apt:7.0:jakarta"
    // JPA & Annotation (QClass 생성 시 필요)
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
}

// QueryDSL QClass 생성 위치
def querydslDir = layout.buildDirectory.dir("generated/querydsl").get().asFile

// QueryDSL QClass 생성 위치를 컴파일러에 추가
sourceSets {
    main.java.srcDirs += [ querydslDir ]
}

// QueryDSL QClass 생성 task 설정
tasks.withType(JavaCompile).configureEach {
    options.getGeneratedSourceOutputDirectory().set(file(querydslDir))
}

tasks.named('clean') {
    delete querydslDir
}


tasks.named('test') {
    useJUnitPlatform()
}
